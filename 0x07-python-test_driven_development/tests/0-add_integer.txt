# Test File: test_add_integer.txt

# Function definition
"""
>>> def add_integer(a, b=98):
...     """
...     Adds two integers and returns the result(integer).
...
...     Args:
...     - a (int or float): The first integer.
...     - b (int or float): The second integer. Set to 98 by default.
...
...     Returns:
...     int: The sum of the two numbers, casted to an integer.
...     """
...     if not (isinstance(a, (int, float))):
...         raise TypeError('a must be an integer')
...     a = int(a)
...
...     if not isinstance(b, (int, float)):
...         raise TypeError('b must be an integer')
...     b = int(b)
...
...     return a + b
"""

# Test Case 1: Adding two integers
>>> add_integer(7, 2)
9

# Test Case 2: Adding a float to an integer
>>> add_integer(0.14, 3)
3

# Test Case 3: Adding two floats
>>> add_integer(99.1, 0.9)
99

# Test Case 4: Invoking function with only one parameter
>>> add_integer(2.7373837336)
100

# Test Case 5: Testing function with zero as an argument
>>> add_integer(0, 44)
44

# Test Case 6: Testing with negative integers
>>> add_integer(-77, -23)
-100

# Test Case 7: Testing with negative floats
>>> add_integer(-1.13, -2.01)
-3

# Test Case 8: Testing with negative floats and integers
>>> add_integer(3, -0.8)
3

# Test Case 9: Testing with 0 and floats
>>> add_integer(-3.33, 0)
-3
